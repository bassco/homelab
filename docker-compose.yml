networks:
  proxy:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  # Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - homeassistant
      - grafana
      - prometheus
      - controller
    networks:
      - proxy

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    environment:
      # DISABLE_JEMALLOC: true only if page size  < 4kb #  grep -ir pagesize /proc/self/smaps|sort -u
      TZ: Europe/Berlin
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    dns:
      - 192.168.1.30
    volumes:
      - ./hassio/config:/config
      # - /run/dbus:/run/dbus:ro # for bluetooth
    restart: unless-stopped
    privileged: false
    networks:
      - proxy

  # provides the homelab.int domain for home LAN
  coredns:
    image: coredns/coredns:latest
    container_name: coredns
    command: -conf /etc/coredns/Corefile -dns.port 53
    expose:
      - "53:53"
      - "53:53/udp"
      - "9080:8080"
      - "9153:9153"
    volumes:
      - ./coredns/Corefile:/etc/coredns/Corefile
      - ./coredns/db.homelab.int:/etc/coredns/db.homelab.int
    network_mode: host

  controller:
    image: "jacobalberty/unifi:${TAG:-latest}"
    container_name: unifi
    hostname: unifi.homelab.int
    expose:
      - "3478:3478/udp"   # STUN
      - "6789:6789/tcp"   # Speed test
      - "8080:8080/tcp"   # Device/ controller comm.
      - "8443:8443/tcp"   # Controller GUI/API as seen in a web browser
      - "8880:8880/tcp"   # HTTP portal redirection
      - "8843:8843/tcp"   # HTTPS portal redirection
      - "10001:10001/udp" # AP discovery
    environment:
      TZ: 'Europe/Berlin'
    volumes:
      - ./unifi/data:/unifi/data
      - ./unifi/log:/unifi/log
      - ./unifi/cert:/unifi/cert
    init: true
    restart: unless-stopped
    privileged: false
    network_mode: host

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: "472"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=/run/secrets/grafana_password
      #- GF_USERS_ALLOW_SIGN_UP=false
    dns:
      - 192.168.1.30
      - 8.8.4.4
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - proxy
    secrets:
       - grafana_password

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    dns:
      - 192.168.1.30
      - 8.8.4.4
    networks:
      - proxy

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    restart: unless-stopped
    command:
      - "--config=/etc/otel/config.yaml"
    volumes:
      - ./otel-collector:/etc/otel:ro
    depends_on:
      - prometheus
    networks:
      - proxy

  # NGINX Prometheus Exporter
  nginx-exporter:
    image: ghcr.io/nginxinc/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    restart: unless-stopped
    command:
      - -nginx.scrape-uri=http://nginx:8081/stub_status
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - proxy

  # UniFi Poller (Unpoller)
  unpoller:
    image: golift/unifi-poller:latest
    container_name: unpoller
    restart: unless-stopped
    environment:
      - UP_UNIFI_DEFAULT_URL=https://192.168.1.30:8443
      - UP_UNIFI_DEFAULT_USER=unifipoller
      - UP_UNIFI_DEFAULT_PASS=/run/secrets/unifi_password  # change me!
      - UP_PROMETHEUS_HTTP_LISTEN=0.0.0.0:9130
      - UP_PROMETHEUS_DISABLE=false
    ports:
      - "9130:9130"
    depends_on:
      - controller
    networks:
      - proxy
    secrets:
       - unifi_password

secrets:
   grafana_password:
     file: ./secrets/grafana_password.txt
   unifi_password:
     file: ./secrets/unifi_password.txt
