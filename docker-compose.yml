networks:
  proxy:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  # Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - homeassistant
      - grafana
      - prometheus
      - controller
    networks:
      - proxy

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    environment:
      # DISABLE_JEMALLOC: true only if page size  < 4kb #  grep -ir pagesize /proc/self/smaps|sort -u
      TZ: Europe/Berlin
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    dns:
      - 192.168.1.30
    volumes:
      - ./hassio/config:/config
      # - /run/dbus:/run/dbus:ro # for bluetooth
    restart: unless-stopped
    privileged: false
    networks:
      - proxy

  controller:
    image: "jacobalberty/unifi:${TAG:-latest}"
    container_name: unifi
    hostname: unifi.homelab.int
    expose:
      - "3478:3478/udp"   # STUN
      - "6789:6789/tcp"   # Speed test
      - "8080:8080/tcp"   # Device/ controller comm.
      - "8443:8443/tcp"   # Controller GUI/API as seen in a web browser
      - "8880:8880/tcp"   # HTTP portal redirection
      - "8843:8843/tcp"   # HTTPS portal redirection
      - "10001:10001/udp" # AP discovery
    environment:
      TZ: 'Europe/Berlin'
    volumes:
      - ./unifi/data:/unifi/data
      - ./unifi/log:/unifi/log
      - ./unifi/cert:/unifi/cert
    init: true
    restart: unless-stopped
    privileged: false
    network_mode: host

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: "472"
    env_file:
      - path: ./.env
        required: true # default
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD} # /run/secrets/grafana_password
      #- GF_USERS_ALLOW_SIGN_UP=false
    dns:
      - 192.168.1.30
      - 8.8.4.4
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - prometheus
    networks:
      - proxy

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    dns:
      - 192.168.1.30
      - 8.8.4.4
    networks:
      - proxy
      - monitoring

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    restart: unless-stopped
    command:
      - "--config=/etc/otel/config.yaml"
    volumes:
      - ./otel-collector:/etc/otel:ro
    depends_on:
      - prometheus
    networks:
      - monitoring

  # NGINX Prometheus Exporter
  nginx-exporter:
    image: ghcr.io/nginxinc/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    restart: unless-stopped
    command:
      - -nginx.scrape-uri=http://nginx:8081/stub_status
    ports:
      - "9113:9113"
    depends_on:
      - nginx
      - prometheus
    networks:
      - proxy

  # UniFi Poller (Unpoller)
  unpoller:
    image: golift/unifi-poller:latest
    container_name: unpoller
    restart: unless-stopped
    env_file:
      - path: ./.env
        required: true # default
    environment:
      - UP_UNIFI_DEFAULT_URL=https://192.168.1.30:8443
      - UP_UNIFI_DEFAULT_USER=unifipoller
      - UP_UNIFI_DEFAULT_PASS=${UNIFI_API_PASSWORD} # /run/secrets/unifi_password  # change me!
      - UP_PROMETHEUS_HTTP_LISTEN=0.0.0.0:9130
      - UP_PROMETHEUS_DISABLE=false
      - UP_PROMETHEUS_NAMESPACE=unpoller
      - UP_INFLUXDB_DISABLE=true
      - UP_POLLER_DEBUG=false
      - UP_UNIFI_DYNAMIC=false
    ports:
      - "9130:9130"
    depends_on:
      - controller
      - prometheus
    networks:
      - monitoring

  # node exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    pid: host
    network_mode: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'

  # cAdvisor for docker image metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    hostname: cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk/:ro
      - /etc/machine-id:/etc/machine-id:ro
    command:
      - "--enable_metrics=cpu,memory,network,disk"
      - "--docker_only=true"
      - "--store_container_labels=false"
      - "--housekeeping_interval=30s"
      - "--disable_metrics=percpu,sched,hugetlb,referenced_memory,resctrl,process"
    networks:
      - monitoring
